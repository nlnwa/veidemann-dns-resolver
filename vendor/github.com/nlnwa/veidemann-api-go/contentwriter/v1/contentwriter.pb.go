// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contentwriter/v1/contentwriter.proto

package contentwriter

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	v1 "github.com/nlnwa/veidemann-api-go/config/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RecordType int32

const (
	RecordType_WARCINFO     RecordType = 0
	RecordType_RESPONSE     RecordType = 1
	RecordType_RESOURCE     RecordType = 2
	RecordType_REQUEST      RecordType = 3
	RecordType_METADATA     RecordType = 4
	RecordType_REVISIT      RecordType = 5
	RecordType_CONVERSION   RecordType = 6
	RecordType_CONTINUATION RecordType = 7
)

var RecordType_name = map[int32]string{
	0: "WARCINFO",
	1: "RESPONSE",
	2: "RESOURCE",
	3: "REQUEST",
	4: "METADATA",
	5: "REVISIT",
	6: "CONVERSION",
	7: "CONTINUATION",
}

var RecordType_value = map[string]int32{
	"WARCINFO":     0,
	"RESPONSE":     1,
	"RESOURCE":     2,
	"REQUEST":      3,
	"METADATA":     4,
	"REVISIT":      5,
	"CONVERSION":   6,
	"CONTINUATION": 7,
}

func (x RecordType) String() string {
	return proto.EnumName(RecordType_name, int32(x))
}

func (RecordType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fce7e840e1d52975, []int{0}
}

type Data struct {
	RecordNum            int32    `protobuf:"varint,1,opt,name=record_num,json=recordNum,proto3" json:"record_num,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_fce7e840e1d52975, []int{0}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetRecordNum() int32 {
	if m != nil {
		return m.RecordNum
	}
	return 0
}

func (m *Data) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type WriteRequestMeta struct {
	ExecutionId    string                                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	TargetUri      string                                 `protobuf:"bytes,2,opt,name=target_uri,json=targetUri,proto3" json:"target_uri,omitempty"`
	RecordMeta     map[int32]*WriteRequestMeta_RecordMeta `protobuf:"bytes,3,rep,name=record_meta,json=recordMeta,proto3" json:"record_meta,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FetchTimeStamp *timestamp.Timestamp                   `protobuf:"bytes,4,opt,name=fetch_time_stamp,json=fetchTimeStamp,proto3" json:"fetch_time_stamp,omitempty"`
	IpAddress      string                                 `protobuf:"bytes,5,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// The http status code. Only relevant for response records.
	StatusCode           int32         `protobuf:"varint,6,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	CollectionRef        *v1.ConfigRef `protobuf:"bytes,7,opt,name=collection_ref,json=collectionRef,proto3" json:"collection_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WriteRequestMeta) Reset()         { *m = WriteRequestMeta{} }
func (m *WriteRequestMeta) String() string { return proto.CompactTextString(m) }
func (*WriteRequestMeta) ProtoMessage()    {}
func (*WriteRequestMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_fce7e840e1d52975, []int{1}
}

func (m *WriteRequestMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequestMeta.Unmarshal(m, b)
}
func (m *WriteRequestMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequestMeta.Marshal(b, m, deterministic)
}
func (m *WriteRequestMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequestMeta.Merge(m, src)
}
func (m *WriteRequestMeta) XXX_Size() int {
	return xxx_messageInfo_WriteRequestMeta.Size(m)
}
func (m *WriteRequestMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequestMeta.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequestMeta proto.InternalMessageInfo

func (m *WriteRequestMeta) GetExecutionId() string {
	if m != nil {
		return m.ExecutionId
	}
	return ""
}

func (m *WriteRequestMeta) GetTargetUri() string {
	if m != nil {
		return m.TargetUri
	}
	return ""
}

func (m *WriteRequestMeta) GetRecordMeta() map[int32]*WriteRequestMeta_RecordMeta {
	if m != nil {
		return m.RecordMeta
	}
	return nil
}

func (m *WriteRequestMeta) GetFetchTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.FetchTimeStamp
	}
	return nil
}

func (m *WriteRequestMeta) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *WriteRequestMeta) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *WriteRequestMeta) GetCollectionRef() *v1.ConfigRef {
	if m != nil {
		return m.CollectionRef
	}
	return nil
}

type WriteRequestMeta_RecordMeta struct {
	RecordNum            int32                           `protobuf:"varint,1,opt,name=record_num,json=recordNum,proto3" json:"record_num,omitempty"`
	Type                 RecordType                      `protobuf:"varint,2,opt,name=type,proto3,enum=veidemann.api.contentwriter.v1.RecordType" json:"type,omitempty"`
	RecordContentType    string                          `protobuf:"bytes,3,opt,name=record_content_type,json=recordContentType,proto3" json:"record_content_type,omitempty"`
	PayloadContentType   string                          `protobuf:"bytes,4,opt,name=payload_content_type,json=payloadContentType,proto3" json:"payload_content_type,omitempty"`
	BlockDigest          string                          `protobuf:"bytes,5,opt,name=block_digest,json=blockDigest,proto3" json:"block_digest,omitempty"`
	PayloadDigest        string                          `protobuf:"bytes,6,opt,name=payload_digest,json=payloadDigest,proto3" json:"payload_digest,omitempty"`
	Size                 int64                           `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	WarcRefersTo         string                          `protobuf:"bytes,8,opt,name=warc_refers_to,json=warcRefersTo,proto3" json:"warc_refers_to,omitempty"`
	SubCollection        v1.Collection_SubCollectionType `protobuf:"varint,9,opt,name=sub_collection,json=subCollection,proto3,enum=veidemann.api.config.v1.Collection_SubCollectionType" json:"sub_collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *WriteRequestMeta_RecordMeta) Reset()         { *m = WriteRequestMeta_RecordMeta{} }
func (m *WriteRequestMeta_RecordMeta) String() string { return proto.CompactTextString(m) }
func (*WriteRequestMeta_RecordMeta) ProtoMessage()    {}
func (*WriteRequestMeta_RecordMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_fce7e840e1d52975, []int{1, 0}
}

func (m *WriteRequestMeta_RecordMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequestMeta_RecordMeta.Unmarshal(m, b)
}
func (m *WriteRequestMeta_RecordMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequestMeta_RecordMeta.Marshal(b, m, deterministic)
}
func (m *WriteRequestMeta_RecordMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequestMeta_RecordMeta.Merge(m, src)
}
func (m *WriteRequestMeta_RecordMeta) XXX_Size() int {
	return xxx_messageInfo_WriteRequestMeta_RecordMeta.Size(m)
}
func (m *WriteRequestMeta_RecordMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequestMeta_RecordMeta.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequestMeta_RecordMeta proto.InternalMessageInfo

func (m *WriteRequestMeta_RecordMeta) GetRecordNum() int32 {
	if m != nil {
		return m.RecordNum
	}
	return 0
}

func (m *WriteRequestMeta_RecordMeta) GetType() RecordType {
	if m != nil {
		return m.Type
	}
	return RecordType_WARCINFO
}

func (m *WriteRequestMeta_RecordMeta) GetRecordContentType() string {
	if m != nil {
		return m.RecordContentType
	}
	return ""
}

func (m *WriteRequestMeta_RecordMeta) GetPayloadContentType() string {
	if m != nil {
		return m.PayloadContentType
	}
	return ""
}

func (m *WriteRequestMeta_RecordMeta) GetBlockDigest() string {
	if m != nil {
		return m.BlockDigest
	}
	return ""
}

func (m *WriteRequestMeta_RecordMeta) GetPayloadDigest() string {
	if m != nil {
		return m.PayloadDigest
	}
	return ""
}

func (m *WriteRequestMeta_RecordMeta) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *WriteRequestMeta_RecordMeta) GetWarcRefersTo() string {
	if m != nil {
		return m.WarcRefersTo
	}
	return ""
}

func (m *WriteRequestMeta_RecordMeta) GetSubCollection() v1.Collection_SubCollectionType {
	if m != nil {
		return m.SubCollection
	}
	return v1.Collection_UNDEFINED
}

type WriteRequest struct {
	// Types that are valid to be assigned to Value:
	//	*WriteRequest_Meta
	//	*WriteRequest_Header
	//	*WriteRequest_Payload
	//	*WriteRequest_Cancel
	Value                isWriteRequest_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fce7e840e1d52975, []int{2}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

type isWriteRequest_Value interface {
	isWriteRequest_Value()
}

type WriteRequest_Meta struct {
	Meta *WriteRequestMeta `protobuf:"bytes,1,opt,name=meta,proto3,oneof"`
}

type WriteRequest_Header struct {
	Header *Data `protobuf:"bytes,2,opt,name=header,proto3,oneof"`
}

type WriteRequest_Payload struct {
	Payload *Data `protobuf:"bytes,3,opt,name=payload,proto3,oneof"`
}

type WriteRequest_Cancel struct {
	Cancel string `protobuf:"bytes,4,opt,name=cancel,proto3,oneof"`
}

func (*WriteRequest_Meta) isWriteRequest_Value() {}

func (*WriteRequest_Header) isWriteRequest_Value() {}

func (*WriteRequest_Payload) isWriteRequest_Value() {}

func (*WriteRequest_Cancel) isWriteRequest_Value() {}

func (m *WriteRequest) GetValue() isWriteRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *WriteRequest) GetMeta() *WriteRequestMeta {
	if x, ok := m.GetValue().(*WriteRequest_Meta); ok {
		return x.Meta
	}
	return nil
}

func (m *WriteRequest) GetHeader() *Data {
	if x, ok := m.GetValue().(*WriteRequest_Header); ok {
		return x.Header
	}
	return nil
}

func (m *WriteRequest) GetPayload() *Data {
	if x, ok := m.GetValue().(*WriteRequest_Payload); ok {
		return x.Payload
	}
	return nil
}

func (m *WriteRequest) GetCancel() string {
	if x, ok := m.GetValue().(*WriteRequest_Cancel); ok {
		return x.Cancel
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WriteRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WriteRequest_Meta)(nil),
		(*WriteRequest_Header)(nil),
		(*WriteRequest_Payload)(nil),
		(*WriteRequest_Cancel)(nil),
	}
}

type WriteResponseMeta struct {
	RecordMeta           map[int32]*WriteResponseMeta_RecordMeta `protobuf:"bytes,1,rep,name=record_meta,json=recordMeta,proto3" json:"record_meta,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *WriteResponseMeta) Reset()         { *m = WriteResponseMeta{} }
func (m *WriteResponseMeta) String() string { return proto.CompactTextString(m) }
func (*WriteResponseMeta) ProtoMessage()    {}
func (*WriteResponseMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_fce7e840e1d52975, []int{3}
}

func (m *WriteResponseMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponseMeta.Unmarshal(m, b)
}
func (m *WriteResponseMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponseMeta.Marshal(b, m, deterministic)
}
func (m *WriteResponseMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponseMeta.Merge(m, src)
}
func (m *WriteResponseMeta) XXX_Size() int {
	return xxx_messageInfo_WriteResponseMeta.Size(m)
}
func (m *WriteResponseMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponseMeta.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponseMeta proto.InternalMessageInfo

func (m *WriteResponseMeta) GetRecordMeta() map[int32]*WriteResponseMeta_RecordMeta {
	if m != nil {
		return m.RecordMeta
	}
	return nil
}

type WriteResponseMeta_RecordMeta struct {
	RecordNum            int32      `protobuf:"varint,1,opt,name=record_num,json=recordNum,proto3" json:"record_num,omitempty"`
	Type                 RecordType `protobuf:"varint,2,opt,name=type,proto3,enum=veidemann.api.contentwriter.v1.RecordType" json:"type,omitempty"`
	WarcId               string     `protobuf:"bytes,3,opt,name=warc_id,json=warcId,proto3" json:"warc_id,omitempty"`
	StorageRef           string     `protobuf:"bytes,4,opt,name=storage_ref,json=storageRef,proto3" json:"storage_ref,omitempty"`
	BlockDigest          string     `protobuf:"bytes,5,opt,name=block_digest,json=blockDigest,proto3" json:"block_digest,omitempty"`
	PayloadDigest        string     `protobuf:"bytes,6,opt,name=payload_digest,json=payloadDigest,proto3" json:"payload_digest,omitempty"`
	WarcRefersTo         string     `protobuf:"bytes,7,opt,name=warc_refers_to,json=warcRefersTo,proto3" json:"warc_refers_to,omitempty"`
	CollectionFinalName  string     `protobuf:"bytes,8,opt,name=collection_final_name,json=collectionFinalName,proto3" json:"collection_final_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WriteResponseMeta_RecordMeta) Reset()         { *m = WriteResponseMeta_RecordMeta{} }
func (m *WriteResponseMeta_RecordMeta) String() string { return proto.CompactTextString(m) }
func (*WriteResponseMeta_RecordMeta) ProtoMessage()    {}
func (*WriteResponseMeta_RecordMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_fce7e840e1d52975, []int{3, 0}
}

func (m *WriteResponseMeta_RecordMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponseMeta_RecordMeta.Unmarshal(m, b)
}
func (m *WriteResponseMeta_RecordMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponseMeta_RecordMeta.Marshal(b, m, deterministic)
}
func (m *WriteResponseMeta_RecordMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponseMeta_RecordMeta.Merge(m, src)
}
func (m *WriteResponseMeta_RecordMeta) XXX_Size() int {
	return xxx_messageInfo_WriteResponseMeta_RecordMeta.Size(m)
}
func (m *WriteResponseMeta_RecordMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponseMeta_RecordMeta.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponseMeta_RecordMeta proto.InternalMessageInfo

func (m *WriteResponseMeta_RecordMeta) GetRecordNum() int32 {
	if m != nil {
		return m.RecordNum
	}
	return 0
}

func (m *WriteResponseMeta_RecordMeta) GetType() RecordType {
	if m != nil {
		return m.Type
	}
	return RecordType_WARCINFO
}

func (m *WriteResponseMeta_RecordMeta) GetWarcId() string {
	if m != nil {
		return m.WarcId
	}
	return ""
}

func (m *WriteResponseMeta_RecordMeta) GetStorageRef() string {
	if m != nil {
		return m.StorageRef
	}
	return ""
}

func (m *WriteResponseMeta_RecordMeta) GetBlockDigest() string {
	if m != nil {
		return m.BlockDigest
	}
	return ""
}

func (m *WriteResponseMeta_RecordMeta) GetPayloadDigest() string {
	if m != nil {
		return m.PayloadDigest
	}
	return ""
}

func (m *WriteResponseMeta_RecordMeta) GetWarcRefersTo() string {
	if m != nil {
		return m.WarcRefersTo
	}
	return ""
}

func (m *WriteResponseMeta_RecordMeta) GetCollectionFinalName() string {
	if m != nil {
		return m.CollectionFinalName
	}
	return ""
}

type WriteReply struct {
	Meta                 *WriteResponseMeta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WriteReply) Reset()         { *m = WriteReply{} }
func (m *WriteReply) String() string { return proto.CompactTextString(m) }
func (*WriteReply) ProtoMessage()    {}
func (*WriteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fce7e840e1d52975, []int{4}
}

func (m *WriteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteReply.Unmarshal(m, b)
}
func (m *WriteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteReply.Marshal(b, m, deterministic)
}
func (m *WriteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteReply.Merge(m, src)
}
func (m *WriteReply) XXX_Size() int {
	return xxx_messageInfo_WriteReply.Size(m)
}
func (m *WriteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteReply.DiscardUnknown(m)
}

var xxx_messageInfo_WriteReply proto.InternalMessageInfo

func (m *WriteReply) GetMeta() *WriteResponseMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterEnum("veidemann.api.contentwriter.v1.RecordType", RecordType_name, RecordType_value)
	proto.RegisterType((*Data)(nil), "veidemann.api.contentwriter.v1.Data")
	proto.RegisterType((*WriteRequestMeta)(nil), "veidemann.api.contentwriter.v1.WriteRequestMeta")
	proto.RegisterMapType((map[int32]*WriteRequestMeta_RecordMeta)(nil), "veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMetaEntry")
	proto.RegisterType((*WriteRequestMeta_RecordMeta)(nil), "veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta")
	proto.RegisterType((*WriteRequest)(nil), "veidemann.api.contentwriter.v1.WriteRequest")
	proto.RegisterType((*WriteResponseMeta)(nil), "veidemann.api.contentwriter.v1.WriteResponseMeta")
	proto.RegisterMapType((map[int32]*WriteResponseMeta_RecordMeta)(nil), "veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMetaEntry")
	proto.RegisterType((*WriteResponseMeta_RecordMeta)(nil), "veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta")
	proto.RegisterType((*WriteReply)(nil), "veidemann.api.contentwriter.v1.WriteReply")
}

func init() {
	proto.RegisterFile("contentwriter/v1/contentwriter.proto", fileDescriptor_fce7e840e1d52975)
}

var fileDescriptor_fce7e840e1d52975 = []byte{
	// 1011 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcd, 0x6f, 0x1a, 0x47,
	0x14, 0xf7, 0x1a, 0x0c, 0xf1, 0x03, 0xd3, 0xcd, 0x24, 0x55, 0x29, 0xfd, 0x88, 0x83, 0x52, 0x09,
	0x59, 0xf1, 0x12, 0x53, 0x55, 0x6a, 0x9b, 0x2a, 0x32, 0xc6, 0x58, 0xe1, 0x10, 0x48, 0x06, 0x9c,
	0x48, 0x55, 0xa5, 0xd5, 0xb0, 0xfb, 0x58, 0xaf, 0xb2, 0xec, 0x6c, 0x77, 0x67, 0x71, 0x49, 0x2f,
	0x3d, 0xf4, 0xff, 0xe9, 0xad, 0xe7, 0x5e, 0xfb, 0x37, 0xf5, 0x52, 0xcd, 0xec, 0x10, 0x0c, 0x89,
	0xfc, 0xa1, 0x54, 0x3d, 0x79, 0xde, 0xef, 0x7d, 0xec, 0x7b, 0xbf, 0x99, 0xdf, 0x33, 0xf0, 0xc0,
	0xe1, 0xa1, 0xc0, 0x50, 0x9c, 0xc7, 0xbe, 0xc0, 0xb8, 0x39, 0x3b, 0x68, 0xae, 0x00, 0x56, 0x14,
	0x73, 0xc1, 0xc9, 0x97, 0x33, 0xf4, 0x5d, 0x9c, 0xb2, 0x30, 0xb4, 0x58, 0xe4, 0x5b, 0xab, 0x21,
	0xb3, 0x83, 0xda, 0xa7, 0x0e, 0x0f, 0x27, 0xbe, 0x27, 0xd3, 0x63, 0x4c, 0x78, 0x1a, 0x3b, 0x98,
	0x64, 0xa9, 0xb5, 0xcf, 0x3d, 0xce, 0xbd, 0x00, 0x9b, 0x2c, 0xf2, 0x9b, 0x2c, 0x0c, 0xb9, 0x60,
	0xc2, 0xe7, 0xe1, 0xc2, 0xfb, 0x50, 0xfd, 0x71, 0xf6, 0x3d, 0x0c, 0xf7, 0x93, 0x73, 0xe6, 0x79,
	0x18, 0x37, 0x79, 0xa4, 0x22, 0xde, 0x13, 0x7d, 0x4f, 0xd7, 0x52, 0xd6, 0x38, 0x9d, 0x34, 0x85,
	0x3f, 0xc5, 0x44, 0xb0, 0x69, 0xa4, 0x03, 0x3e, 0x5b, 0x0f, 0xc0, 0x69, 0x24, 0xe6, 0x99, 0xb3,
	0xfe, 0x1d, 0xe4, 0x8f, 0x99, 0x60, 0xe4, 0x0b, 0x80, 0x18, 0x1d, 0x1e, 0xbb, 0x76, 0x98, 0x4e,
	0xab, 0xc6, 0xae, 0xd1, 0xd8, 0xa2, 0xdb, 0x19, 0xd2, 0x4f, 0xa7, 0x84, 0x40, 0xde, 0x65, 0x82,
	0x55, 0x37, 0x77, 0x8d, 0x46, 0x99, 0xaa, 0x73, 0xfd, 0xcf, 0x22, 0x98, 0xaf, 0xe4, 0xb4, 0x14,
	0x7f, 0x4e, 0x31, 0x11, 0xcf, 0x50, 0x30, 0x72, 0x1f, 0xca, 0xf8, 0x0b, 0x3a, 0xa9, 0xec, 0xd0,
	0xf6, 0x5d, 0x55, 0x69, 0x9b, 0x96, 0xde, 0x62, 0x3d, 0x57, 0x7e, 0x4a, 0xb0, 0xd8, 0x43, 0x61,
	0xa7, 0xb1, 0xaf, 0x2a, 0x6e, 0xd3, 0xed, 0x0c, 0x39, 0x8d, 0x7d, 0xc2, 0xa0, 0xa4, 0x3b, 0x99,
	0xa2, 0x60, 0xd5, 0xdc, 0x6e, 0xae, 0x51, 0x6a, 0x1d, 0x5a, 0x97, 0x93, 0x6d, 0xad, 0x37, 0x62,
	0x51, 0x55, 0x43, 0x1e, 0xbb, 0xa1, 0x88, 0xe7, 0x54, 0x8f, 0xa7, 0x9a, 0x3c, 0x06, 0x73, 0x82,
	0xc2, 0x39, 0xb3, 0x25, 0x55, 0xb6, 0xe2, 0xaa, 0x9a, 0xdf, 0x35, 0x1a, 0xa5, 0x56, 0xcd, 0xca,
	0xc8, 0xb2, 0x16, 0x64, 0x59, 0xa3, 0x05, 0x9b, 0xb4, 0xa2, 0x72, 0xa4, 0x3d, 0x94, 0xb6, 0x9c,
	0xc3, 0x8f, 0x6c, 0xe6, 0xba, 0x31, 0x26, 0x49, 0x75, 0x2b, 0x9b, 0xc3, 0x8f, 0xda, 0x19, 0x40,
	0xee, 0x41, 0x29, 0x11, 0x4c, 0xa4, 0x89, 0xed, 0x70, 0x17, 0xab, 0x05, 0x45, 0x29, 0x64, 0x50,
	0x87, 0xbb, 0x48, 0x7a, 0x50, 0x71, 0x78, 0x10, 0xa0, 0xa3, 0xb8, 0x8a, 0x71, 0x52, 0x2d, 0xaa,
	0x1e, 0xea, 0xef, 0xce, 0x3a, 0xf1, 0x3d, 0x39, 0x64, 0x47, 0x9d, 0x28, 0x4e, 0xe8, 0xce, 0x32,
	0x93, 0xe2, 0xa4, 0xf6, 0x47, 0x0e, 0x60, 0x39, 0xf0, 0x55, 0x97, 0xf9, 0x04, 0xf2, 0x62, 0x1e,
	0xa1, 0xa2, 0xbe, 0xd2, 0xda, 0xbb, 0x8a, 0xda, 0xac, 0xf0, 0x68, 0x1e, 0x21, 0x55, 0x79, 0xc4,
	0x82, 0x3b, 0xba, 0xbc, 0x8e, 0xb5, 0x55, 0xb9, 0x9c, 0x62, 0xe0, 0x76, 0xe6, 0xea, 0x64, 0x1e,
	0x99, 0x45, 0x1e, 0xc1, 0xdd, 0x88, 0xcd, 0x03, 0xce, 0xd6, 0x12, 0xf2, 0x2a, 0x81, 0x68, 0xdf,
	0xc5, 0x8c, 0xfb, 0x50, 0x1e, 0x07, 0xdc, 0x79, 0x6d, 0xbb, 0xbe, 0x87, 0x89, 0xd0, 0xe4, 0x96,
	0x14, 0x76, 0xac, 0x20, 0xf2, 0x15, 0x54, 0x16, 0x45, 0x75, 0x50, 0x41, 0x05, 0xed, 0x68, 0x54,
	0x87, 0x11, 0xc8, 0x27, 0xfe, 0x1b, 0x54, 0xd4, 0xe6, 0xa8, 0x3a, 0x93, 0x07, 0x50, 0x39, 0x67,
	0xb1, 0x23, 0x29, 0xc7, 0x38, 0xb1, 0x05, 0xaf, 0xde, 0x52, 0xa9, 0x65, 0x89, 0x52, 0x05, 0x8e,
	0x38, 0xf9, 0x09, 0x2a, 0x49, 0x3a, 0xb6, 0x97, 0x44, 0x57, 0xb7, 0x15, 0x5f, 0xdf, 0x5c, 0x72,
	0x3d, 0x8b, 0x50, 0x6b, 0x98, 0x8e, 0x97, 0x96, 0xa2, 0x6e, 0x27, 0xb9, 0x08, 0xd5, 0xde, 0xc0,
	0x47, 0x6b, 0x2f, 0x94, 0x98, 0x90, 0x7b, 0x8d, 0x73, 0x7d, 0x5d, 0xf2, 0x48, 0x5e, 0xc0, 0xd6,
	0x8c, 0x05, 0x69, 0x76, 0x53, 0xa5, 0xd6, 0xe3, 0x0f, 0x10, 0x01, 0xcd, 0x2a, 0x7d, 0xbf, 0xf9,
	0xad, 0x51, 0xff, 0xc7, 0x80, 0xf2, 0xc5, 0x50, 0x72, 0x02, 0x79, 0xa5, 0x35, 0x43, 0x7d, 0xe6,
	0xd1, 0x4d, 0x3f, 0xf3, 0x74, 0x83, 0xaa, 0x7c, 0xf2, 0x04, 0x0a, 0x67, 0xc8, 0x5c, 0x8c, 0x75,
	0xc3, 0x0f, 0xae, 0xaa, 0x24, 0x57, 0xcf, 0xd3, 0x0d, 0xaa, 0xb3, 0xc8, 0x21, 0x14, 0xf5, 0xed,
	0xa9, 0xc7, 0x74, 0xfd, 0x02, 0x8b, 0x34, 0x52, 0x85, 0x82, 0xc3, 0x42, 0x07, 0x83, 0xec, 0x71,
	0xc9, 0xda, 0x99, 0x7d, 0x54, 0xd4, 0x5c, 0xd6, 0xff, 0xca, 0xc3, 0x6d, 0x3d, 0x41, 0x12, 0xf1,
	0x30, 0x41, 0x25, 0x99, 0xf1, 0xea, 0xd6, 0x31, 0xd4, 0xd6, 0x69, 0x5f, 0x93, 0x89, 0x65, 0x9d,
	0xcb, 0xd6, 0x4e, 0xed, 0xef, 0xcd, 0xff, 0x53, 0xa5, 0x9f, 0x40, 0x51, 0xbd, 0x72, 0xdf, 0xd5,
	0xca, 0x2c, 0x48, 0xb3, 0xe7, 0x66, 0x8b, 0x89, 0xc7, 0xcc, 0x43, 0xb5, 0x74, 0x32, 0x15, 0x82,
	0x86, 0x28, 0x4e, 0xfe, 0x43, 0xf5, 0xbd, 0xab, 0xb4, 0xe2, 0x7b, 0x94, 0xd6, 0x82, 0x8f, 0x2f,
	0x2c, 0xc2, 0x89, 0x1f, 0xb2, 0xc0, 0x0e, 0xd9, 0x14, 0xb5, 0x2c, 0xef, 0x2c, 0x9d, 0x27, 0xd2,
	0xd7, 0x67, 0x53, 0xac, 0xfd, 0x7a, 0x1d, 0xfd, 0xd0, 0x55, 0xfd, 0xfc, 0xf0, 0x21, 0xd7, 0x79,
	0x51, 0x40, 0x43, 0x00, 0x1d, 0x1a, 0x05, 0x73, 0xd2, 0x5d, 0x51, 0xcf, 0xc1, 0x8d, 0x3f, 0x92,
	0x89, 0x67, 0xef, 0x37, 0x63, 0xf1, 0x3a, 0xd4, 0x0a, 0x2c, 0xc3, 0xad, 0x57, 0x6d, 0xda, 0xe9,
	0xf5, 0x4f, 0x06, 0xe6, 0x86, 0xb4, 0x68, 0x77, 0xf8, 0x7c, 0xd0, 0x1f, 0x76, 0x4d, 0x43, 0x5b,
	0x83, 0x53, 0xda, 0xe9, 0x9a, 0x9b, 0xa4, 0x04, 0x45, 0xda, 0x7d, 0x71, 0xda, 0x1d, 0x8e, 0xcc,
	0x9c, 0x74, 0x3d, 0xeb, 0x8e, 0xda, 0xc7, 0xed, 0x51, 0xdb, 0xcc, 0x67, 0xae, 0x97, 0xbd, 0x61,
	0x6f, 0x64, 0x6e, 0x91, 0x0a, 0x40, 0x67, 0xd0, 0x7f, 0xd9, 0xa5, 0xc3, 0xde, 0xa0, 0x6f, 0x16,
	0x88, 0x09, 0xe5, 0xce, 0xa0, 0x3f, 0xea, 0xf5, 0x4f, 0xdb, 0x23, 0x89, 0x14, 0x5b, 0x33, 0xd8,
	0xd1, 0x5b, 0x58, 0x35, 0x19, 0x13, 0x84, 0x2d, 0xd5, 0x38, 0x79, 0x78, 0x93, 0x9d, 0x50, 0xdb,
	0xbb, 0x66, 0x74, 0x14, 0xcc, 0xeb, 0x1b, 0x0d, 0xe3, 0xe8, 0x77, 0x03, 0x1a, 0x21, 0xb7, 0xc2,
	0xb1, 0x15, 0x86, 0xec, 0x8a, 0xdc, 0xa3, 0xbb, 0x2b, 0x2d, 0x0e, 0x31, 0x9e, 0xf9, 0x0e, 0x3e,
	0x37, 0x7e, 0x3c, 0xf4, 0x7c, 0x71, 0x96, 0x8e, 0x2d, 0x87, 0x4f, 0x9b, 0x61, 0x10, 0x9e, 0xb3,
	0xe6, 0xdb, 0x42, 0xfb, 0x2c, 0xf2, 0xf7, 0x3d, 0xde, 0x5c, 0xff, 0x59, 0xf7, 0x78, 0x05, 0x18,
	0x17, 0xd4, 0x3f, 0xfd, 0xaf, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x4b, 0x1e, 0xff, 0xff,
	0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContentWriterClient is the client API for ContentWriter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentWriterClient interface {
	Write(ctx context.Context, opts ...grpc.CallOption) (ContentWriter_WriteClient, error)
}

type contentWriterClient struct {
	cc *grpc.ClientConn
}

func NewContentWriterClient(cc *grpc.ClientConn) ContentWriterClient {
	return &contentWriterClient{cc}
}

func (c *contentWriterClient) Write(ctx context.Context, opts ...grpc.CallOption) (ContentWriter_WriteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContentWriter_serviceDesc.Streams[0], "/veidemann.api.contentwriter.v1.ContentWriter/write", opts...)
	if err != nil {
		return nil, err
	}
	x := &contentWriterWriteClient{stream}
	return x, nil
}

type ContentWriter_WriteClient interface {
	Send(*WriteRequest) error
	CloseAndRecv() (*WriteReply, error)
	grpc.ClientStream
}

type contentWriterWriteClient struct {
	grpc.ClientStream
}

func (x *contentWriterWriteClient) Send(m *WriteRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *contentWriterWriteClient) CloseAndRecv() (*WriteReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(WriteReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ContentWriterServer is the server API for ContentWriter service.
type ContentWriterServer interface {
	Write(ContentWriter_WriteServer) error
}

func RegisterContentWriterServer(s *grpc.Server, srv ContentWriterServer) {
	s.RegisterService(&_ContentWriter_serviceDesc, srv)
}

func _ContentWriter_Write_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ContentWriterServer).Write(&contentWriterWriteServer{stream})
}

type ContentWriter_WriteServer interface {
	SendAndClose(*WriteReply) error
	Recv() (*WriteRequest, error)
	grpc.ServerStream
}

type contentWriterWriteServer struct {
	grpc.ServerStream
}

func (x *contentWriterWriteServer) SendAndClose(m *WriteReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *contentWriterWriteServer) Recv() (*WriteRequest, error) {
	m := new(WriteRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ContentWriter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "veidemann.api.contentwriter.v1.ContentWriter",
	HandlerType: (*ContentWriterServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "write",
			Handler:       _ContentWriter_Write_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "contentwriter/v1/contentwriter.proto",
}
